<style type="text/css">
 #attack-xml {
   font-family: monospace;
   height: 15em;
   resize: none;
   width: 100%;
 }
</style>

<h1 class="page-header">
  XML External Entity Processing
</h1>
<blockquote class="bs-callout bs-callout-info">
  <a target="_blank" href="https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing">
    XXE Info
  </a>
</blockquote>
<p>
  The following XML snippet is crafted to exploit SAX parsers that
  are configured to allow for external entity processing. If successful,
  the exploit will instruct the parser to read the <code>/etc/passwd</code>
  file from the server's file system.
</p>
<% sinkData.forEach(function(sink) { %>
<div class="row">
  <div class="col-sm-10 col-sm-8" style="padding-bottom: 30px;">
    <h4 class="sub-header">
      <code><%= sink.name %></code>
    </h4>
    <form method="<%= sink.method %>" action="<%= sink.url %>/unsafe" target="_blank">
      <div class="form-group">
        <textarea name="input" class="form-control" id="attack-xml"><%= attackXml %></textarea>
      </div>
      <% if (locals._csrf) { %>
      <input name="_csrf" type="hidden" value="<%= _csrf %>" />
      <% } %>
      <button type="submit" class="btn btn-primary">Submit</button>
    </form>
  </div>
</div>
<% }); %>
<% include ../partials/safeButtons %>
